{"name": "test_add_to_cart_successful", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00B0F653+11395]\n\t(No symbol) [0x00AEB7A4]\n\t(No symbol) [0x00A31A43]\n\t(No symbol) [0x00A756C8]\n\t(No symbol) [0x00A758AB]\n\t(No symbol) [0x00AB26A2]\n\t(No symbol) [0x00A971E4]\n\t(No symbol) [0x00AB03DC]\n\t(No symbol) [0x00A96F36]\n\t(No symbol) [0x00A6A276]\n\t(No symbol) [0x00A6AECD]\n\tGetHandleVerifier [0x00C12403+1071667]\n\tGetHandleVerifier [0x00C1C9C4+1114100]\n\tGetHandleVerifier [0x00C154B2+1084130]\n\tGetHandleVerifier [0x00B3013B+145259]\n\t(No symbol) [0x00AF1693]\n\t(No symbol) [0x00AEEFB8]\n\t(No symbol) [0x00AEF157]\n\t(No symbol) [0x00AE842E]\n\tBaseThreadInitThunk [0x7719FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x778280CE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7782809E+238]", "trace": "self = <test.test_add_asset_to_cart.TestCartPage testMethod=test_add_to_cart_successful>\n\n    def setUp(self):\n        \"\"\"\n        Set up the test environment before each test.\n    \n        This method initializes the browser, loads the configuration,\n        and navigates to the specified URL.\n        \"\"\"\n        logging.info(\"------------------------------SETUP------------------------------\")\n        self.browser = BrowserWrapper()\n        self.config = ConfigProvider.load_config_json()\n        self.driver = self.browser.get_driver(self.config[\"url\"])\n    \n        self.login_page = LoginPage(self.driver)\n        self.login_page.login_flow(self.config[\"email\"], self.config[\"password\"])\n    \n>       self.home_page = HomePage(self.driver)\n\ntest\\test_add_asset_to_cart.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlogic\\home_page.py:37: in __init__\n    self._min_price_input = WebDriverWait(self._driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1eed9ec4cd96a33b7b46c9d53fed10a7\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000019B36D75760>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00B0F653+11395]\nE       \t(No symbol) [0x00AEB7A4]\nE       \t(No symbol) [0x00A31A43]\nE       \t(No symbol) [0x00A756C8]\nE       \t(No symbol) [0x00A758AB]\nE       \t(No symbol) [0x00AB26A2]\nE       \t(No symbol) [0x00A971E4]\nE       \t(No symbol) [0x00AB03DC]\nE       \t(No symbol) [0x00A96F36]\nE       \t(No symbol) [0x00A6A276]\nE       \t(No symbol) [0x00A6AECD]\nE       \tGetHandleVerifier [0x00C12403+1071667]\nE       \tGetHandleVerifier [0x00C1C9C4+1114100]\nE       \tGetHandleVerifier [0x00C154B2+1084130]\nE       \tGetHandleVerifier [0x00B3013B+145259]\nE       \t(No symbol) [0x00AF1693]\nE       \t(No symbol) [0x00AEEFB8]\nE       \t(No symbol) [0x00AEF157]\nE       \t(No symbol) [0x00AE842E]\nE       \tBaseThreadInitThunk [0x7719FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x778280CE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7782809E+238]\n\nC:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "\n        Test adding an asset to the cart and verifying its presence.\n        ", "attachments": [{"name": "log", "source": "f1ce0e15-9c0a-462b-83af-403a449f64b9-attachment.txt", "type": "text/plain"}], "start": 1721902118125, "stop": 1721902140364, "uuid": "e3d2c4e4-c403-42d9-91b3-583a850fabb6", "historyId": "21f2ff614c54e510f35df7e0facee0a2", "testCaseId": "21f2ff614c54e510f35df7e0facee0a2", "fullName": "test.test_add_asset_to_cart.TestCartPage#test_add_to_cart_successful", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_asset_to_cart"}, {"name": "subSuite", "value": "TestCartPage"}, {"name": "host", "value": "DESKTOP-IGNAR84"}, {"name": "thread", "value": "12556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_asset_to_cart"}]}